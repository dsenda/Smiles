
c_code_dc_motor_on_off_duty_cycle.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000000  00800100  00800100  00000550  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         000004dc  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000004  00800100  00800100  00000550  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  00000550  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00000580  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000030  00000000  00000000  000005c0  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00000771  00000000  00000000  000005f0  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 000006ae  00000000  00000000  00000d61  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00000312  00000000  00000000  0000140f  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000060  00000000  00000000  00001724  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    000003cc  00000000  00000000  00001784  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    0000009e  00000000  00000000  00001b50  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000020  00000000  00000000  00001bee  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 34 00 	jmp	0x68	; 0x68 <__ctors_end>
   4:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
   8:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
   c:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  10:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  14:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  18:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  1c:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  20:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  24:	0c 94 48 00 	jmp	0x90	; 0x90 <__vector_9>
  28:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  2c:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  30:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  34:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  38:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  3c:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  40:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  44:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  48:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  4c:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  50:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  54:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  58:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  5c:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  60:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  64:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>

00000068 <__ctors_end>:
  68:	11 24       	eor	r1, r1
  6a:	1f be       	out	0x3f, r1	; 63
  6c:	cf ef       	ldi	r28, 0xFF	; 255
  6e:	d8 e0       	ldi	r29, 0x08	; 8
  70:	de bf       	out	0x3e, r29	; 62
  72:	cd bf       	out	0x3d, r28	; 61

00000074 <__do_clear_bss>:
  74:	21 e0       	ldi	r18, 0x01	; 1
  76:	a0 e0       	ldi	r26, 0x00	; 0
  78:	b1 e0       	ldi	r27, 0x01	; 1
  7a:	01 c0       	rjmp	.+2      	; 0x7e <.do_clear_bss_start>

0000007c <.do_clear_bss_loop>:
  7c:	1d 92       	st	X+, r1

0000007e <.do_clear_bss_start>:
  7e:	a4 30       	cpi	r26, 0x04	; 4
  80:	b2 07       	cpc	r27, r18
  82:	e1 f7       	brne	.-8      	; 0x7c <.do_clear_bss_loop>
  84:	0e 94 7b 00 	call	0xf6	; 0xf6 <main>
  88:	0c 94 6c 02 	jmp	0x4d8	; 0x4d8 <_exit>

0000008c <__bad_interrupt>:
  8c:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000090 <__vector_9>:
		OCR0B = poten;
	}
}

ISR (TIMER2_OVF_vect)		// timer0 overflow interrupt vector
{
  90:	1f 92       	push	r1
  92:	0f 92       	push	r0
  94:	0f b6       	in	r0, 0x3f	; 63
  96:	0f 92       	push	r0
  98:	11 24       	eor	r1, r1
  9a:	2f 93       	push	r18
  9c:	8f 93       	push	r24
  9e:	9f 93       	push	r25
	if ((PINC & 0b10) == 0)	// If pushbutton is pressed.
  a0:	31 99       	sbic	0x06, 1	; 6
  a2:	1a c0       	rjmp	.+52     	; 0xd8 <__vector_9+0x48>
	{	
		motor ^= 1;			// Toggles motor variable.
  a4:	80 91 02 01 	lds	r24, 0x0102	; 0x800102 <motor>
  a8:	90 91 03 01 	lds	r25, 0x0103	; 0x800103 <motor+0x1>
  ac:	21 e0       	ldi	r18, 0x01	; 1
  ae:	82 27       	eor	r24, r18
  b0:	90 93 03 01 	sts	0x0103, r25	; 0x800103 <motor+0x1>
  b4:	80 93 02 01 	sts	0x0102, r24	; 0x800102 <motor>
		if (motor == 1)		// Turns motor on.
  b8:	01 97       	sbiw	r24, 0x01	; 1
  ba:	19 f4       	brne	.+6      	; 0xc2 <__vector_9+0x32>
		{
			TCCR0A = 0b00100011;
  bc:	83 e2       	ldi	r24, 0x23	; 35
  be:	84 bd       	out	0x24, r24	; 36
  c0:	02 c0       	rjmp	.+4      	; 0xc6 <__vector_9+0x36>
		}
		else				// Turns motor off.
		{
			TCCR0A = 0b00000011;
  c2:	83 e0       	ldi	r24, 0x03	; 3
  c4:	84 bd       	out	0x24, r24	; 36
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
  c6:	8f ef       	ldi	r24, 0xFF	; 255
  c8:	99 e6       	ldi	r25, 0x69	; 105
  ca:	28 e1       	ldi	r18, 0x18	; 24
  cc:	81 50       	subi	r24, 0x01	; 1
  ce:	90 40       	sbci	r25, 0x00	; 0
  d0:	20 40       	sbci	r18, 0x00	; 0
  d2:	e1 f7       	brne	.-8      	; 0xcc <__vector_9+0x3c>
  d4:	00 c0       	rjmp	.+0      	; 0xd6 <__vector_9+0x46>
  d6:	00 00       	nop
		}
		_delay_ms(500);		// Delay for de-bouncing.
	}
}
  d8:	9f 91       	pop	r25
  da:	8f 91       	pop	r24
  dc:	2f 91       	pop	r18
  de:	0f 90       	pop	r0
  e0:	0f be       	out	0x3f, r0	; 63
  e2:	0f 90       	pop	r0
  e4:	1f 90       	pop	r1
  e6:	18 95       	reti

000000e8 <adc_init>:

void adc_init (void)	// Sets up and enables ADC.
{
	ADMUX = (0<<REFS1)|	// Reference Selection Bits.
  e8:	80 e4       	ldi	r24, 0x40	; 64
  ea:	80 93 7c 00 	sts	0x007C, r24	; 0x80007c <__TEXT_REGION_LENGTH__+0x7e007c>
	(1<<REFS0)|			// AVcc - external cap at AREF.
	(0<<ADLAR)|			// ADC Left Adjust Result.
	(0<<MUX2)|			// Analog Channel Selection Bits.
	(0<<MUX1)|			// ADC0 (PC0).
	(0<<MUX0);
	ADCSRA = (1<<ADEN)|	// ADC Enable.
  ee:	85 e8       	ldi	r24, 0x85	; 133
  f0:	80 93 7a 00 	sts	0x007A, r24	; 0x80007a <__TEXT_REGION_LENGTH__+0x7e007a>
  f4:	08 95       	ret

000000f6 <main>:

void adc_init(void);

int main(void)
{
	DDRD = 0b00100000;	// Sets PD5 as an output.
  f6:	80 e2       	ldi	r24, 0x20	; 32
  f8:	8a b9       	out	0x0a, r24	; 10
	DDRC = 0b00000000;	// Sets all pins in PORTC as inputs.
  fa:	17 b8       	out	0x07, r1	; 7
	TCCR2A = 0x00;		// Sets normal mode on timer0.
  fc:	10 92 b0 00 	sts	0x00B0, r1	; 0x8000b0 <__TEXT_REGION_LENGTH__+0x7e00b0>
	TCCR2B = 0x01;		// Sets no pre-scaling.
 100:	81 e0       	ldi	r24, 0x01	; 1
 102:	80 93 b1 00 	sts	0x00B1, r24	; 0x8000b1 <__TEXT_REGION_LENGTH__+0x7e00b1>
	TIMSK2 = 0x01;		// Enables timer0 overflow interrupt.
 106:	80 93 70 00 	sts	0x0070, r24	; 0x800070 <__TEXT_REGION_LENGTH__+0x7e0070>
	sei ();				// Enables global interrupts.
 10a:	78 94       	sei
	
	TCCR0A = 0b10100011; //Sets Fast PWM.
 10c:	93 ea       	ldi	r25, 0xA3	; 163
 10e:	94 bd       	out	0x24, r25	; 36
	TCCR0B = 0x01;	// Sets no prescaling.
 110:	85 bd       	out	0x25, r24	; 37
	OCR0B = 0xCC;	// Sets 80% or 20% duty cycle.
 112:	8c ec       	ldi	r24, 0xCC	; 204
 114:	88 bd       	out	0x28, r24	; 40
	adc_init();
 116:	0e 94 74 00 	call	0xe8	; 0xe8 <adc_init>
	
	while (1)
	{
		ADCSRA|=(1<<ADSC);				// Starts conversion.
 11a:	ca e7       	ldi	r28, 0x7A	; 122
 11c:	d0 e0       	ldi	r29, 0x00	; 0
		while((ADCSRA&(1<<ADIF))==0);	// Waits for conversion to finish.
		ADCSRA |= (1<<ADIF);
		poten = ADCL;					// Records potentiometer data.
 11e:	0f 2e       	mov	r0, r31
 120:	f8 e7       	ldi	r31, 0x78	; 120
 122:	ef 2e       	mov	r14, r31
 124:	f1 2c       	mov	r15, r1
 126:	f0 2d       	mov	r31, r0
		poten = poten | (ADCH<<8);
 128:	09 e7       	ldi	r16, 0x79	; 121
 12a:	10 e0       	ldi	r17, 0x00	; 0
	OCR0B = 0xCC;	// Sets 80% or 20% duty cycle.
	adc_init();
	
	while (1)
	{
		ADCSRA|=(1<<ADSC);				// Starts conversion.
 12c:	88 81       	ld	r24, Y
 12e:	80 64       	ori	r24, 0x40	; 64
 130:	88 83       	st	Y, r24
		while((ADCSRA&(1<<ADIF))==0);	// Waits for conversion to finish.
 132:	88 81       	ld	r24, Y
 134:	84 ff       	sbrs	r24, 4
 136:	fd cf       	rjmp	.-6      	; 0x132 <main+0x3c>
		ADCSRA |= (1<<ADIF);
 138:	88 81       	ld	r24, Y
 13a:	80 61       	ori	r24, 0x10	; 16
 13c:	88 83       	st	Y, r24
		poten = ADCL;					// Records potentiometer data.
 13e:	f7 01       	movw	r30, r14
 140:	60 81       	ld	r22, Z
 142:	70 e0       	ldi	r23, 0x00	; 0
 144:	70 93 01 01 	sts	0x0101, r23	; 0x800101 <_edata+0x1>
 148:	60 93 00 01 	sts	0x0100, r22	; 0x800100 <_edata>
		poten = poten | (ADCH<<8);
 14c:	f8 01       	movw	r30, r16
 14e:	80 81       	ld	r24, Z
		poten = (poten/1024.0) * 5000/10;
 150:	78 2b       	or	r23, r24
 152:	07 2e       	mov	r0, r23
 154:	00 0c       	add	r0, r0
 156:	88 0b       	sbc	r24, r24
 158:	99 0b       	sbc	r25, r25
 15a:	0e 94 73 01 	call	0x2e6	; 0x2e6 <__floatsisf>
 15e:	20 e0       	ldi	r18, 0x00	; 0
 160:	30 e0       	ldi	r19, 0x00	; 0
 162:	40 e8       	ldi	r20, 0x80	; 128
 164:	5a e3       	ldi	r21, 0x3A	; 58
 166:	0e 94 ff 01 	call	0x3fe	; 0x3fe <__mulsf3>
 16a:	20 e0       	ldi	r18, 0x00	; 0
 16c:	30 e4       	ldi	r19, 0x40	; 64
 16e:	4c e9       	ldi	r20, 0x9C	; 156
 170:	55 e4       	ldi	r21, 0x45	; 69
 172:	0e 94 ff 01 	call	0x3fe	; 0x3fe <__mulsf3>
 176:	20 e0       	ldi	r18, 0x00	; 0
 178:	30 e0       	ldi	r19, 0x00	; 0
 17a:	40 e2       	ldi	r20, 0x20	; 32
 17c:	51 e4       	ldi	r21, 0x41	; 65
 17e:	0e 94 c9 00 	call	0x192	; 0x192 <__divsf3>
 182:	0e 94 3b 01 	call	0x276	; 0x276 <__fixsfsi>
 186:	60 93 00 01 	sts	0x0100, r22	; 0x800100 <_edata>
 18a:	70 93 01 01 	sts	0x0101, r23	; 0x800101 <_edata+0x1>
		OCR0B = poten;
 18e:	68 bd       	out	0x28, r22	; 40
	}
 190:	cd cf       	rjmp	.-102    	; 0x12c <main+0x36>

00000192 <__divsf3>:
 192:	0e 94 dd 00 	call	0x1ba	; 0x1ba <__divsf3x>
 196:	0c 94 c5 01 	jmp	0x38a	; 0x38a <__fp_round>
 19a:	0e 94 be 01 	call	0x37c	; 0x37c <__fp_pscB>
 19e:	58 f0       	brcs	.+22     	; 0x1b6 <__divsf3+0x24>
 1a0:	0e 94 b7 01 	call	0x36e	; 0x36e <__fp_pscA>
 1a4:	40 f0       	brcs	.+16     	; 0x1b6 <__divsf3+0x24>
 1a6:	29 f4       	brne	.+10     	; 0x1b2 <__divsf3+0x20>
 1a8:	5f 3f       	cpi	r21, 0xFF	; 255
 1aa:	29 f0       	breq	.+10     	; 0x1b6 <__divsf3+0x24>
 1ac:	0c 94 ae 01 	jmp	0x35c	; 0x35c <__fp_inf>
 1b0:	51 11       	cpse	r21, r1
 1b2:	0c 94 f9 01 	jmp	0x3f2	; 0x3f2 <__fp_szero>
 1b6:	0c 94 b4 01 	jmp	0x368	; 0x368 <__fp_nan>

000001ba <__divsf3x>:
 1ba:	0e 94 d6 01 	call	0x3ac	; 0x3ac <__fp_split3>
 1be:	68 f3       	brcs	.-38     	; 0x19a <__divsf3+0x8>

000001c0 <__divsf3_pse>:
 1c0:	99 23       	and	r25, r25
 1c2:	b1 f3       	breq	.-20     	; 0x1b0 <__divsf3+0x1e>
 1c4:	55 23       	and	r21, r21
 1c6:	91 f3       	breq	.-28     	; 0x1ac <__divsf3+0x1a>
 1c8:	95 1b       	sub	r25, r21
 1ca:	55 0b       	sbc	r21, r21
 1cc:	bb 27       	eor	r27, r27
 1ce:	aa 27       	eor	r26, r26
 1d0:	62 17       	cp	r22, r18
 1d2:	73 07       	cpc	r23, r19
 1d4:	84 07       	cpc	r24, r20
 1d6:	38 f0       	brcs	.+14     	; 0x1e6 <__divsf3_pse+0x26>
 1d8:	9f 5f       	subi	r25, 0xFF	; 255
 1da:	5f 4f       	sbci	r21, 0xFF	; 255
 1dc:	22 0f       	add	r18, r18
 1de:	33 1f       	adc	r19, r19
 1e0:	44 1f       	adc	r20, r20
 1e2:	aa 1f       	adc	r26, r26
 1e4:	a9 f3       	breq	.-22     	; 0x1d0 <__divsf3_pse+0x10>
 1e6:	35 d0       	rcall	.+106    	; 0x252 <__divsf3_pse+0x92>
 1e8:	0e 2e       	mov	r0, r30
 1ea:	3a f0       	brmi	.+14     	; 0x1fa <__divsf3_pse+0x3a>
 1ec:	e0 e8       	ldi	r30, 0x80	; 128
 1ee:	32 d0       	rcall	.+100    	; 0x254 <__divsf3_pse+0x94>
 1f0:	91 50       	subi	r25, 0x01	; 1
 1f2:	50 40       	sbci	r21, 0x00	; 0
 1f4:	e6 95       	lsr	r30
 1f6:	00 1c       	adc	r0, r0
 1f8:	ca f7       	brpl	.-14     	; 0x1ec <__divsf3_pse+0x2c>
 1fa:	2b d0       	rcall	.+86     	; 0x252 <__divsf3_pse+0x92>
 1fc:	fe 2f       	mov	r31, r30
 1fe:	29 d0       	rcall	.+82     	; 0x252 <__divsf3_pse+0x92>
 200:	66 0f       	add	r22, r22
 202:	77 1f       	adc	r23, r23
 204:	88 1f       	adc	r24, r24
 206:	bb 1f       	adc	r27, r27
 208:	26 17       	cp	r18, r22
 20a:	37 07       	cpc	r19, r23
 20c:	48 07       	cpc	r20, r24
 20e:	ab 07       	cpc	r26, r27
 210:	b0 e8       	ldi	r27, 0x80	; 128
 212:	09 f0       	breq	.+2      	; 0x216 <__divsf3_pse+0x56>
 214:	bb 0b       	sbc	r27, r27
 216:	80 2d       	mov	r24, r0
 218:	bf 01       	movw	r22, r30
 21a:	ff 27       	eor	r31, r31
 21c:	93 58       	subi	r25, 0x83	; 131
 21e:	5f 4f       	sbci	r21, 0xFF	; 255
 220:	3a f0       	brmi	.+14     	; 0x230 <__divsf3_pse+0x70>
 222:	9e 3f       	cpi	r25, 0xFE	; 254
 224:	51 05       	cpc	r21, r1
 226:	78 f0       	brcs	.+30     	; 0x246 <__divsf3_pse+0x86>
 228:	0c 94 ae 01 	jmp	0x35c	; 0x35c <__fp_inf>
 22c:	0c 94 f9 01 	jmp	0x3f2	; 0x3f2 <__fp_szero>
 230:	5f 3f       	cpi	r21, 0xFF	; 255
 232:	e4 f3       	brlt	.-8      	; 0x22c <__divsf3_pse+0x6c>
 234:	98 3e       	cpi	r25, 0xE8	; 232
 236:	d4 f3       	brlt	.-12     	; 0x22c <__divsf3_pse+0x6c>
 238:	86 95       	lsr	r24
 23a:	77 95       	ror	r23
 23c:	67 95       	ror	r22
 23e:	b7 95       	ror	r27
 240:	f7 95       	ror	r31
 242:	9f 5f       	subi	r25, 0xFF	; 255
 244:	c9 f7       	brne	.-14     	; 0x238 <__divsf3_pse+0x78>
 246:	88 0f       	add	r24, r24
 248:	91 1d       	adc	r25, r1
 24a:	96 95       	lsr	r25
 24c:	87 95       	ror	r24
 24e:	97 f9       	bld	r25, 7
 250:	08 95       	ret
 252:	e1 e0       	ldi	r30, 0x01	; 1
 254:	66 0f       	add	r22, r22
 256:	77 1f       	adc	r23, r23
 258:	88 1f       	adc	r24, r24
 25a:	bb 1f       	adc	r27, r27
 25c:	62 17       	cp	r22, r18
 25e:	73 07       	cpc	r23, r19
 260:	84 07       	cpc	r24, r20
 262:	ba 07       	cpc	r27, r26
 264:	20 f0       	brcs	.+8      	; 0x26e <__divsf3_pse+0xae>
 266:	62 1b       	sub	r22, r18
 268:	73 0b       	sbc	r23, r19
 26a:	84 0b       	sbc	r24, r20
 26c:	ba 0b       	sbc	r27, r26
 26e:	ee 1f       	adc	r30, r30
 270:	88 f7       	brcc	.-30     	; 0x254 <__divsf3_pse+0x94>
 272:	e0 95       	com	r30
 274:	08 95       	ret

00000276 <__fixsfsi>:
 276:	0e 94 42 01 	call	0x284	; 0x284 <__fixunssfsi>
 27a:	68 94       	set
 27c:	b1 11       	cpse	r27, r1
 27e:	0c 94 f9 01 	jmp	0x3f2	; 0x3f2 <__fp_szero>
 282:	08 95       	ret

00000284 <__fixunssfsi>:
 284:	0e 94 de 01 	call	0x3bc	; 0x3bc <__fp_splitA>
 288:	88 f0       	brcs	.+34     	; 0x2ac <__fixunssfsi+0x28>
 28a:	9f 57       	subi	r25, 0x7F	; 127
 28c:	98 f0       	brcs	.+38     	; 0x2b4 <__fixunssfsi+0x30>
 28e:	b9 2f       	mov	r27, r25
 290:	99 27       	eor	r25, r25
 292:	b7 51       	subi	r27, 0x17	; 23
 294:	b0 f0       	brcs	.+44     	; 0x2c2 <__fixunssfsi+0x3e>
 296:	e1 f0       	breq	.+56     	; 0x2d0 <__fixunssfsi+0x4c>
 298:	66 0f       	add	r22, r22
 29a:	77 1f       	adc	r23, r23
 29c:	88 1f       	adc	r24, r24
 29e:	99 1f       	adc	r25, r25
 2a0:	1a f0       	brmi	.+6      	; 0x2a8 <__fixunssfsi+0x24>
 2a2:	ba 95       	dec	r27
 2a4:	c9 f7       	brne	.-14     	; 0x298 <__fixunssfsi+0x14>
 2a6:	14 c0       	rjmp	.+40     	; 0x2d0 <__fixunssfsi+0x4c>
 2a8:	b1 30       	cpi	r27, 0x01	; 1
 2aa:	91 f0       	breq	.+36     	; 0x2d0 <__fixunssfsi+0x4c>
 2ac:	0e 94 f8 01 	call	0x3f0	; 0x3f0 <__fp_zero>
 2b0:	b1 e0       	ldi	r27, 0x01	; 1
 2b2:	08 95       	ret
 2b4:	0c 94 f8 01 	jmp	0x3f0	; 0x3f0 <__fp_zero>
 2b8:	67 2f       	mov	r22, r23
 2ba:	78 2f       	mov	r23, r24
 2bc:	88 27       	eor	r24, r24
 2be:	b8 5f       	subi	r27, 0xF8	; 248
 2c0:	39 f0       	breq	.+14     	; 0x2d0 <__fixunssfsi+0x4c>
 2c2:	b9 3f       	cpi	r27, 0xF9	; 249
 2c4:	cc f3       	brlt	.-14     	; 0x2b8 <__fixunssfsi+0x34>
 2c6:	86 95       	lsr	r24
 2c8:	77 95       	ror	r23
 2ca:	67 95       	ror	r22
 2cc:	b3 95       	inc	r27
 2ce:	d9 f7       	brne	.-10     	; 0x2c6 <__fixunssfsi+0x42>
 2d0:	3e f4       	brtc	.+14     	; 0x2e0 <__fixunssfsi+0x5c>
 2d2:	90 95       	com	r25
 2d4:	80 95       	com	r24
 2d6:	70 95       	com	r23
 2d8:	61 95       	neg	r22
 2da:	7f 4f       	sbci	r23, 0xFF	; 255
 2dc:	8f 4f       	sbci	r24, 0xFF	; 255
 2de:	9f 4f       	sbci	r25, 0xFF	; 255
 2e0:	08 95       	ret

000002e2 <__floatunsisf>:
 2e2:	e8 94       	clt
 2e4:	09 c0       	rjmp	.+18     	; 0x2f8 <__floatsisf+0x12>

000002e6 <__floatsisf>:
 2e6:	97 fb       	bst	r25, 7
 2e8:	3e f4       	brtc	.+14     	; 0x2f8 <__floatsisf+0x12>
 2ea:	90 95       	com	r25
 2ec:	80 95       	com	r24
 2ee:	70 95       	com	r23
 2f0:	61 95       	neg	r22
 2f2:	7f 4f       	sbci	r23, 0xFF	; 255
 2f4:	8f 4f       	sbci	r24, 0xFF	; 255
 2f6:	9f 4f       	sbci	r25, 0xFF	; 255
 2f8:	99 23       	and	r25, r25
 2fa:	a9 f0       	breq	.+42     	; 0x326 <__floatsisf+0x40>
 2fc:	f9 2f       	mov	r31, r25
 2fe:	96 e9       	ldi	r25, 0x96	; 150
 300:	bb 27       	eor	r27, r27
 302:	93 95       	inc	r25
 304:	f6 95       	lsr	r31
 306:	87 95       	ror	r24
 308:	77 95       	ror	r23
 30a:	67 95       	ror	r22
 30c:	b7 95       	ror	r27
 30e:	f1 11       	cpse	r31, r1
 310:	f8 cf       	rjmp	.-16     	; 0x302 <__floatsisf+0x1c>
 312:	fa f4       	brpl	.+62     	; 0x352 <__floatsisf+0x6c>
 314:	bb 0f       	add	r27, r27
 316:	11 f4       	brne	.+4      	; 0x31c <__floatsisf+0x36>
 318:	60 ff       	sbrs	r22, 0
 31a:	1b c0       	rjmp	.+54     	; 0x352 <__floatsisf+0x6c>
 31c:	6f 5f       	subi	r22, 0xFF	; 255
 31e:	7f 4f       	sbci	r23, 0xFF	; 255
 320:	8f 4f       	sbci	r24, 0xFF	; 255
 322:	9f 4f       	sbci	r25, 0xFF	; 255
 324:	16 c0       	rjmp	.+44     	; 0x352 <__floatsisf+0x6c>
 326:	88 23       	and	r24, r24
 328:	11 f0       	breq	.+4      	; 0x32e <__floatsisf+0x48>
 32a:	96 e9       	ldi	r25, 0x96	; 150
 32c:	11 c0       	rjmp	.+34     	; 0x350 <__floatsisf+0x6a>
 32e:	77 23       	and	r23, r23
 330:	21 f0       	breq	.+8      	; 0x33a <__floatsisf+0x54>
 332:	9e e8       	ldi	r25, 0x8E	; 142
 334:	87 2f       	mov	r24, r23
 336:	76 2f       	mov	r23, r22
 338:	05 c0       	rjmp	.+10     	; 0x344 <__floatsisf+0x5e>
 33a:	66 23       	and	r22, r22
 33c:	71 f0       	breq	.+28     	; 0x35a <__floatsisf+0x74>
 33e:	96 e8       	ldi	r25, 0x86	; 134
 340:	86 2f       	mov	r24, r22
 342:	70 e0       	ldi	r23, 0x00	; 0
 344:	60 e0       	ldi	r22, 0x00	; 0
 346:	2a f0       	brmi	.+10     	; 0x352 <__floatsisf+0x6c>
 348:	9a 95       	dec	r25
 34a:	66 0f       	add	r22, r22
 34c:	77 1f       	adc	r23, r23
 34e:	88 1f       	adc	r24, r24
 350:	da f7       	brpl	.-10     	; 0x348 <__floatsisf+0x62>
 352:	88 0f       	add	r24, r24
 354:	96 95       	lsr	r25
 356:	87 95       	ror	r24
 358:	97 f9       	bld	r25, 7
 35a:	08 95       	ret

0000035c <__fp_inf>:
 35c:	97 f9       	bld	r25, 7
 35e:	9f 67       	ori	r25, 0x7F	; 127
 360:	80 e8       	ldi	r24, 0x80	; 128
 362:	70 e0       	ldi	r23, 0x00	; 0
 364:	60 e0       	ldi	r22, 0x00	; 0
 366:	08 95       	ret

00000368 <__fp_nan>:
 368:	9f ef       	ldi	r25, 0xFF	; 255
 36a:	80 ec       	ldi	r24, 0xC0	; 192
 36c:	08 95       	ret

0000036e <__fp_pscA>:
 36e:	00 24       	eor	r0, r0
 370:	0a 94       	dec	r0
 372:	16 16       	cp	r1, r22
 374:	17 06       	cpc	r1, r23
 376:	18 06       	cpc	r1, r24
 378:	09 06       	cpc	r0, r25
 37a:	08 95       	ret

0000037c <__fp_pscB>:
 37c:	00 24       	eor	r0, r0
 37e:	0a 94       	dec	r0
 380:	12 16       	cp	r1, r18
 382:	13 06       	cpc	r1, r19
 384:	14 06       	cpc	r1, r20
 386:	05 06       	cpc	r0, r21
 388:	08 95       	ret

0000038a <__fp_round>:
 38a:	09 2e       	mov	r0, r25
 38c:	03 94       	inc	r0
 38e:	00 0c       	add	r0, r0
 390:	11 f4       	brne	.+4      	; 0x396 <__fp_round+0xc>
 392:	88 23       	and	r24, r24
 394:	52 f0       	brmi	.+20     	; 0x3aa <__fp_round+0x20>
 396:	bb 0f       	add	r27, r27
 398:	40 f4       	brcc	.+16     	; 0x3aa <__fp_round+0x20>
 39a:	bf 2b       	or	r27, r31
 39c:	11 f4       	brne	.+4      	; 0x3a2 <__fp_round+0x18>
 39e:	60 ff       	sbrs	r22, 0
 3a0:	04 c0       	rjmp	.+8      	; 0x3aa <__fp_round+0x20>
 3a2:	6f 5f       	subi	r22, 0xFF	; 255
 3a4:	7f 4f       	sbci	r23, 0xFF	; 255
 3a6:	8f 4f       	sbci	r24, 0xFF	; 255
 3a8:	9f 4f       	sbci	r25, 0xFF	; 255
 3aa:	08 95       	ret

000003ac <__fp_split3>:
 3ac:	57 fd       	sbrc	r21, 7
 3ae:	90 58       	subi	r25, 0x80	; 128
 3b0:	44 0f       	add	r20, r20
 3b2:	55 1f       	adc	r21, r21
 3b4:	59 f0       	breq	.+22     	; 0x3cc <__fp_splitA+0x10>
 3b6:	5f 3f       	cpi	r21, 0xFF	; 255
 3b8:	71 f0       	breq	.+28     	; 0x3d6 <__fp_splitA+0x1a>
 3ba:	47 95       	ror	r20

000003bc <__fp_splitA>:
 3bc:	88 0f       	add	r24, r24
 3be:	97 fb       	bst	r25, 7
 3c0:	99 1f       	adc	r25, r25
 3c2:	61 f0       	breq	.+24     	; 0x3dc <__fp_splitA+0x20>
 3c4:	9f 3f       	cpi	r25, 0xFF	; 255
 3c6:	79 f0       	breq	.+30     	; 0x3e6 <__fp_splitA+0x2a>
 3c8:	87 95       	ror	r24
 3ca:	08 95       	ret
 3cc:	12 16       	cp	r1, r18
 3ce:	13 06       	cpc	r1, r19
 3d0:	14 06       	cpc	r1, r20
 3d2:	55 1f       	adc	r21, r21
 3d4:	f2 cf       	rjmp	.-28     	; 0x3ba <__fp_split3+0xe>
 3d6:	46 95       	lsr	r20
 3d8:	f1 df       	rcall	.-30     	; 0x3bc <__fp_splitA>
 3da:	08 c0       	rjmp	.+16     	; 0x3ec <__fp_splitA+0x30>
 3dc:	16 16       	cp	r1, r22
 3de:	17 06       	cpc	r1, r23
 3e0:	18 06       	cpc	r1, r24
 3e2:	99 1f       	adc	r25, r25
 3e4:	f1 cf       	rjmp	.-30     	; 0x3c8 <__fp_splitA+0xc>
 3e6:	86 95       	lsr	r24
 3e8:	71 05       	cpc	r23, r1
 3ea:	61 05       	cpc	r22, r1
 3ec:	08 94       	sec
 3ee:	08 95       	ret

000003f0 <__fp_zero>:
 3f0:	e8 94       	clt

000003f2 <__fp_szero>:
 3f2:	bb 27       	eor	r27, r27
 3f4:	66 27       	eor	r22, r22
 3f6:	77 27       	eor	r23, r23
 3f8:	cb 01       	movw	r24, r22
 3fa:	97 f9       	bld	r25, 7
 3fc:	08 95       	ret

000003fe <__mulsf3>:
 3fe:	0e 94 12 02 	call	0x424	; 0x424 <__mulsf3x>
 402:	0c 94 c5 01 	jmp	0x38a	; 0x38a <__fp_round>
 406:	0e 94 b7 01 	call	0x36e	; 0x36e <__fp_pscA>
 40a:	38 f0       	brcs	.+14     	; 0x41a <__LOCK_REGION_LENGTH__+0x1a>
 40c:	0e 94 be 01 	call	0x37c	; 0x37c <__fp_pscB>
 410:	20 f0       	brcs	.+8      	; 0x41a <__LOCK_REGION_LENGTH__+0x1a>
 412:	95 23       	and	r25, r21
 414:	11 f0       	breq	.+4      	; 0x41a <__LOCK_REGION_LENGTH__+0x1a>
 416:	0c 94 ae 01 	jmp	0x35c	; 0x35c <__fp_inf>
 41a:	0c 94 b4 01 	jmp	0x368	; 0x368 <__fp_nan>
 41e:	11 24       	eor	r1, r1
 420:	0c 94 f9 01 	jmp	0x3f2	; 0x3f2 <__fp_szero>

00000424 <__mulsf3x>:
 424:	0e 94 d6 01 	call	0x3ac	; 0x3ac <__fp_split3>
 428:	70 f3       	brcs	.-36     	; 0x406 <__LOCK_REGION_LENGTH__+0x6>

0000042a <__mulsf3_pse>:
 42a:	95 9f       	mul	r25, r21
 42c:	c1 f3       	breq	.-16     	; 0x41e <__LOCK_REGION_LENGTH__+0x1e>
 42e:	95 0f       	add	r25, r21
 430:	50 e0       	ldi	r21, 0x00	; 0
 432:	55 1f       	adc	r21, r21
 434:	62 9f       	mul	r22, r18
 436:	f0 01       	movw	r30, r0
 438:	72 9f       	mul	r23, r18
 43a:	bb 27       	eor	r27, r27
 43c:	f0 0d       	add	r31, r0
 43e:	b1 1d       	adc	r27, r1
 440:	63 9f       	mul	r22, r19
 442:	aa 27       	eor	r26, r26
 444:	f0 0d       	add	r31, r0
 446:	b1 1d       	adc	r27, r1
 448:	aa 1f       	adc	r26, r26
 44a:	64 9f       	mul	r22, r20
 44c:	66 27       	eor	r22, r22
 44e:	b0 0d       	add	r27, r0
 450:	a1 1d       	adc	r26, r1
 452:	66 1f       	adc	r22, r22
 454:	82 9f       	mul	r24, r18
 456:	22 27       	eor	r18, r18
 458:	b0 0d       	add	r27, r0
 45a:	a1 1d       	adc	r26, r1
 45c:	62 1f       	adc	r22, r18
 45e:	73 9f       	mul	r23, r19
 460:	b0 0d       	add	r27, r0
 462:	a1 1d       	adc	r26, r1
 464:	62 1f       	adc	r22, r18
 466:	83 9f       	mul	r24, r19
 468:	a0 0d       	add	r26, r0
 46a:	61 1d       	adc	r22, r1
 46c:	22 1f       	adc	r18, r18
 46e:	74 9f       	mul	r23, r20
 470:	33 27       	eor	r19, r19
 472:	a0 0d       	add	r26, r0
 474:	61 1d       	adc	r22, r1
 476:	23 1f       	adc	r18, r19
 478:	84 9f       	mul	r24, r20
 47a:	60 0d       	add	r22, r0
 47c:	21 1d       	adc	r18, r1
 47e:	82 2f       	mov	r24, r18
 480:	76 2f       	mov	r23, r22
 482:	6a 2f       	mov	r22, r26
 484:	11 24       	eor	r1, r1
 486:	9f 57       	subi	r25, 0x7F	; 127
 488:	50 40       	sbci	r21, 0x00	; 0
 48a:	9a f0       	brmi	.+38     	; 0x4b2 <__mulsf3_pse+0x88>
 48c:	f1 f0       	breq	.+60     	; 0x4ca <__mulsf3_pse+0xa0>
 48e:	88 23       	and	r24, r24
 490:	4a f0       	brmi	.+18     	; 0x4a4 <__mulsf3_pse+0x7a>
 492:	ee 0f       	add	r30, r30
 494:	ff 1f       	adc	r31, r31
 496:	bb 1f       	adc	r27, r27
 498:	66 1f       	adc	r22, r22
 49a:	77 1f       	adc	r23, r23
 49c:	88 1f       	adc	r24, r24
 49e:	91 50       	subi	r25, 0x01	; 1
 4a0:	50 40       	sbci	r21, 0x00	; 0
 4a2:	a9 f7       	brne	.-22     	; 0x48e <__mulsf3_pse+0x64>
 4a4:	9e 3f       	cpi	r25, 0xFE	; 254
 4a6:	51 05       	cpc	r21, r1
 4a8:	80 f0       	brcs	.+32     	; 0x4ca <__mulsf3_pse+0xa0>
 4aa:	0c 94 ae 01 	jmp	0x35c	; 0x35c <__fp_inf>
 4ae:	0c 94 f9 01 	jmp	0x3f2	; 0x3f2 <__fp_szero>
 4b2:	5f 3f       	cpi	r21, 0xFF	; 255
 4b4:	e4 f3       	brlt	.-8      	; 0x4ae <__mulsf3_pse+0x84>
 4b6:	98 3e       	cpi	r25, 0xE8	; 232
 4b8:	d4 f3       	brlt	.-12     	; 0x4ae <__mulsf3_pse+0x84>
 4ba:	86 95       	lsr	r24
 4bc:	77 95       	ror	r23
 4be:	67 95       	ror	r22
 4c0:	b7 95       	ror	r27
 4c2:	f7 95       	ror	r31
 4c4:	e7 95       	ror	r30
 4c6:	9f 5f       	subi	r25, 0xFF	; 255
 4c8:	c1 f7       	brne	.-16     	; 0x4ba <__mulsf3_pse+0x90>
 4ca:	fe 2b       	or	r31, r30
 4cc:	88 0f       	add	r24, r24
 4ce:	91 1d       	adc	r25, r1
 4d0:	96 95       	lsr	r25
 4d2:	87 95       	ror	r24
 4d4:	97 f9       	bld	r25, 7
 4d6:	08 95       	ret

000004d8 <_exit>:
 4d8:	f8 94       	cli

000004da <__stop_program>:
 4da:	ff cf       	rjmp	.-2      	; 0x4da <__stop_program>
